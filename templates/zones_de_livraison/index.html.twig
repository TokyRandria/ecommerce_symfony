<head>
    <meta charset="utf-8">
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <style type="text/css">
        #map{ /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height:700px;
        }
    </style>
    <title>Carte</title>
</head>
<body>
<div id="map">
    <!-- Ici s'affichera la carte -->
</div>



<!-- Fichiers Javascript -->
<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
<script type="text/javascript">
    // On initialise la latitude et la longitude de Paris (centre de la carte)
    var lat = 48.852969;
    var lon = 2.349903;
    var macarte = null;
    // Nous initialisons une liste de marqueurs
    var villes = {
        "Paris": { "lat": 48.852969, "lon": 2.349903 },
        "Brest": { "lat": 48.383, "lon": -4.500 },
        "Quimper": { "lat": 48.000, "lon": -4.100 },
        "Bayonne": { "lat": 43.500, "lon": -1.467 }
    };
    // Fonction d'initialisation de la carte

    function initMap() {
        var markers = [];
        var polymarker=[];
        // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
        macarte = L.map('map').setView([lat, lon], 11);
        // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
        L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
            // Il est toujours bien de laisser le lien vers la source des données
            attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
            minZoom: 5,
            maxZoom: 20
        }).addTo(macarte);
        // Nous ajoutons un marqueur
        {% for adresse_repere in adresse_reperes %}
            var marker = L.marker([{{ adresse_repere.latitude }},{{ adresse_repere.longitude }}]).addTo(macarte);
      /*  for (ville in villes) {
            var marker = L.marker([villes[ville].lat, villes[ville].lon]).addTo(macarte);
            marker.bindPopup(ville);*/
            markers.push(marker);
            polymarker.push([{{ adresse_repere.latitude }},{{ adresse_repere.longitude }}])
      //  }
        {% endfor %}
        console.log(markers[1]._latlng);
     /*   var latlngs = [
            [48.852969, 2.349903],
            [48.383, -4.500],
            [17.686816, 83.218482]
        ];
        var polygone = L.polygon(latlngs, {color: 'red'});*/

        var polygone = L.polygon(polymarker,{color:'red'});
        polygone.addTo(macarte);
        var group = new L.featureGroup(markers); // Nous créons le groupe des marqueurs pour adapter le zoom
        macarte.fitBounds(group.getBounds().pad(0.5));

    }

    window.onload = function(){
        // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé

        initMap();
        macarte.on("click", function(e){
            var mp = new L.Marker([e.latlng.lat, e.latlng.lng]).addTo(macarte);
        });
    };
/*    xmlhttp.onreadystatechange=() => {
        // La transaction est terminée ?
        if(xmlhttp.readyState == 4){
            // Si la transaction est un succès
            if(xmlhttp.status == 200){
                // On traite les données reçues

            }else{
                console.log(xmlhttp.statusText);
            }
        }
    }
    let xmlhttp = new XMLHttpRequest();
    xmlhttp.open("GET","")

    xmlhttp.send(null);*/
</script>
</body>